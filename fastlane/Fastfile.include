# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

build_description_path = "../templates/DESCRIPTION.md" # "../#{ENV["BUILD_DESCRIPTION_PATH"]}"
build_changelog_path = "../templates/CHANGELOG.md" # "../#{ENV["BUILD_CHANGELOG_PATH"]}"
beta_feedback_path = "../templates/beta-feedback.txt"
beta_review_info_path = "../templates/beta-review-info.txt"

def map_from_file(path)
  dict = {}
  File.foreach(path) { |line|
    comps = line.strip.split("=")
    key = comps[0]
    value = comps[1]
    dict[key] = value
  }
  dict
end

desc "Prepare a new build"
lane :prepare_archive do
    ensure_git_status_clean
    cocoapods
    get_build_number
    base_build_number = lane_context[SharedValues::BUILD_NUMBER].to_i
    increment_build_number(
        build_number: base_build_number + number_of_commits
    )
end

desc "Set build changelog"
lane :set_build_changelog do
    lane_context[SharedValues::FL_CHANGELOG] = File.read(build_changelog_path)
end

desc "Upload a build to the App Store"
lane :store_deploy do
    deliver(
        skip_binary_upload: false,
        skip_metadata: true,
        skip_screenshots: true
    )
end

desc "Update App Store metadata"
lane :update_metadata do
    deliver(
        skip_screenshots: true
    )
end

desc "Update App Store screenshots"
lane :update_screenshots do
    deliver(
        skip_metadata: true
    )
end

desc "Update provisioning profiles"
lane :update_provisioning do |options|
    options[:force_for_new_devices] = true
    match(options)
end

platform :ios do
    desc "Archive a new build"
    lane :create_archive do |options|
        prepare_archive
        match unless options.include? :auto
        build_ios_app
    end

    desc "Submit a build to App Center"
    lane :dev_deploy do
        set_build_changelog
        appcenter_upload
    end

    desc "Submit a build to TestFlight"
    lane :beta_deploy do
        set_build_changelog
        pilot(
            beta_app_description: File.read(build_description_path),
            beta_app_feedback_email: File.read(beta_feedback_path),
            beta_app_review_info: map_from_file(beta_review_info_path)
        )
    end
end

platform :mac do
    desc "Archive a new build"
    lane :create_archive do |options|
        prepare_archive
        match unless options.include? :auto
        build_mac_app
    end

    desc "Submit a build to App Center"
    lane :dev_deploy do
        set_build_changelog
        #notarize
        appcenter_upload
    end
end
